# make Ctrl-a to the Prefix, set Prefix a to send ctrl-a to the app
unbind C-b
set -g prefix C-Space
bind Space send-prefix

# unbind layout select (conflicts with wingo bindings) 
unbind M-1
unbind M-2
unbind M-3
unbind M-4
unbind M-5

# Status bar config
set-option -g status-bg yellow
set-option -g status-fg colour0
set -g status-interval 5

set -g status-left "#[fg=red]#S %H:%M "
set -g status-right ""
# set -g status-right "#H: #(cut -d' ' -f1-3 /proc/loadavg)"

set -w -g window-status-current-bg red
set -w -g window-status-current-fg black

bind-key C clear-history \; send-keys "Enter"\; send-keys "Enter"\; send-keys "Enter"\; send-keys -l "!  *** tmux clear ***" \; send-keys "Enter"\; send-keys "Enter"\; 

bind -r L next-layout
bind -r C-Space last-window

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-n if-shell "$is_vim" "send-keys C-n" "select-pane -D"
bind -n C-e if-shell "$is_vim" "send-keys C-e" "select-pane -U"
bind -n C-t if-shell "$is_vim" "send-keys C-t" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# quick pane cycling
unbind ^A
bind ^A select-pane -t :.+

# Split window to panes
bind | split-window -h
bind - split-window -v

# pane movement between windows
bind-key J command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key S command-prompt -p "send pane to:"  "break-pane -t :"

# xterm title naming:
set-option -g set-titles on
set-option -g set-titles-string '[#S:#I #H] #W'

# Start numbering of windows and panes from 1
set-option -g base-index 1
setw -g pane-base-index 1

# Bindings for creating new window and running app inside it
bind-key v  new-window -n vim "/bin/sh -c 'vim; exec bash'"
bind-key V  new-window -n vim vim
bind-key j  new-window "run_junest; exec bash"

# better support for xterm: make ctrl-arrow, etc. work
setw -g xterm-keys on
#set-option -g default-terminal "screen-256color"
set-option -g default-terminal "xterm-256color"

# Set the esc/alt disambiguation timeout to 10ms.
set-option -sg escape-time 10

# force a reload of the config file
unbind r
bind-key r  source-file ~/.tmux.conf \; display-message '~/.tmux.conf sourced'

# toggle last two windows
bind-key C-a last-window

# tmux history limit
set -g history-limit 50000

# make copy-mode use vi key-bindings (including serach with "/" )
set-window-option -g mode-keys vi
unbind [
bind Space copy-mode
bind C-b copy-mode -u
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection
bind-key -t vi-copy 'Y' copy-pipe 'xsel -b'
bind-key -t vi-copy 'r' rectangle-toggle
bind-key -t vi-copy Space  cancel
bind-key -t vi-copy Escape  cancel
unbind p
bind p paste-buffer

# move x clipboard into tmux paste buffer
bind C-p run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer"
# move tmux copy buffer into x clipboard
bind C-y run "tmux show-buffer | xclip -i"

# Pipe the current pane to a log file with Shift-H - Press Shift-H again to stop.
bind-key H pipe-pane -o "cat >>$HOME/#W-tmux.log" \; display-message "Toggled logging to $HOME/#W-tmux.log"

# Time messages remain in the status bar. Lower this number
# if this is too distracting. 
set-option -g display-time 2000

# Sync panes - send what you're typing to other panes.
bind C-s set-window-option synchronize-panes

# By-defualt, use mouse-mode off (to allow easy text seleciton with mouse)
# Use Prefix m to turn mouse-mode on, Prefix M to turn mouse mode off
set -g mode-mouse off
set -g mouse-resize-pane off
set -g mouse-select-pane off
set -g mouse-select-window off
bind m \
  set -g mode-mouse on \;\
  set -g mouse-resize-pane on \;\
  set -g mouse-select-pane on \;\
  set -g mouse-select-window on \;\
  display 'Mouse: ON'

# Toggle mouse off with ^B M
bind M \
  set -g mode-mouse off \;\
  set -g mouse-resize-pane off \;\
  set -g mouse-select-pane off \;\
  set -g mouse-select-window off \;\
  display 'Mouse: OFF'

